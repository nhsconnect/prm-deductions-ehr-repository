{
  "swagger": "2.0",
  "info": {
    "description": "Service to handle generation of URLs for upload/download from S3",
    "version": "1.0.0",
    "title": "EHR Repository"
  },
  "tags": [],
  "paths": {
    "/health": {
      "get": {
        "tags": [],
        "summary": "Check filestore and database is available",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successfully return health check report"
          },
          "500": {
            "description": "Unexpected error, couldn't retrieve health status",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          },
          "503": {
            "description": "Filestore or Database is currently unavailable",
            "schema": {
              "$ref": "#/definitions/HealthStatus"
            }
          }
        }
      }
    },
    "/error": {
      "get": {
        "tags": [],
        "summary": "Generate error log",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "201": {
            "description": "Successfully create error log"
          }
        }
      }
    },
    "/fragments": {
      "post": {
        "tags": [],
        "summary": "Generate S3 upload URL",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UploadUrlRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Generation of URL"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "422": {
            "description": "Validation failed",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      },
      "patch": {
        "tags": [],
        "summary": "Mark message as transfer complete",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "schema": {
              "$ref": "#/definitions/UpdateMessageRequest"
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Successful Generation of URL"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "422": {
            "description": "Validation failed",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/patients": {
      "get": {
        "tags": [],
        "summary": "Patient details",
        "consumes": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/patients/{nhsNumber}/health-records": {
      "get": {
        "tags": [],
        "summary": "Gets health records for a patient",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nhsNumber",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "422": {
            "description": "Validation failed",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/patients/{nhsNumber}/health-records/{conversationId}": {
      "get": {
        "tags": [],
        "summary": "Gets health record through the associated conversation id",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nhsNumber",
            "type": "string",
            "required": true
          },
          {
            "in": "path",
            "name": "conversationId",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "404": {
            "description": "Health record with that conversation id not found"
          },
          "422": {
            "description": "Validation failed",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/patients/{nhsNumber}/health-records/fragments": {
      "get": {
        "tags": [],
        "summary": "Gets health record fragments for a patient",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "nhsNumber",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "422": {
            "description": "Validation failed",
            "schema": {
              "$ref": "#/definitions/ValidationErrors"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "UploadUrlRequest": {
      "type": "object",
      "properties": {
        "nhsNumber": {
          "type": "string"
        },
        "conversationId": {
          "type": "string"
        },
        "isLargeMessage": {
          "type": "boolean"
        },
        "messageId": {
          "type": "string"
        },
        "manifest": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "nhsNumber",
        "messageId"
      ]
    },
    "UpdateMessageRequest": {
      "type": "object",
      "properties": {
        "transferComplete": {
          "type": "boolean"
        },
        "conversationId": {
          "type": "string"
        }
      },
      "required": [
        "transferComplete",
        "conversationId"
      ]
    },
    "ValidationErrors": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "object",
            "description": "An object with the name of the field in error as the key and the error message as the value",
            "properties": {}
          }
        }
      }
    },
    "HealthStatus": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "node_env": {
          "type": "string"
        },
        "details": {
          "type": "object",
          "properties": {
            "filestore": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "bucketName": {
                  "type": "string"
                },
                "available": {
                  "type": "boolean"
                },
                "writable": {
                  "type": "boolean"
                },
                "error": {
                  "type": "object"
                }
              }
            },
            "database": {
              "type": "object",
              "properties": {
                "type": {
                  "type": "string"
                },
                "connection": {
                  "type": "boolean"
                },
                "writable": {
                  "type": "boolean"
                },
                "error": {
                  "type": "object"
                }
              }
            }
          }
        }
      }
    }
  }
}